generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      =  env("DATABASE_URL")
}

model Document {
  id   String   @id @default(cuid())
  uri  String?
  html String
}

model Account {
  id                 Int       @id @default(autoincrement())
  userId             Int
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  user               User      @relation(fields: [userId], references: [id])

  @@unique([providerId, providerAccountId])
}

model Session {
  id           Int      @id @default(autoincrement())
  userId       Int
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
}

model User {
  id            Int       @id @default(autoincrement())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]
}

model VerificationRequest {
  id         Int      @id @default(autoincrement())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Platform {
  id        String @id @default(cuid())
  name      String
  released  String
  note      String?

  games     Game[]
  files     File[]

  @@unique([name, released], name: "Platform_name_released_unique_constraint")
}


model File {
  id        String @id @default(cuid())
  path      String @unique
  sequence  Int    @default(0)

  games     Game[]     @relation(references: [id])
  platforms Platform[] @relation(references: [id])
}

model Game {
  id         String    @id @default(cuid())
  name       String
  released   String
  note       String?

  files      File[]
  platforms  Platform[]

  @@unique([name, released], name: "Game_name_released_unique_constraint")
}
